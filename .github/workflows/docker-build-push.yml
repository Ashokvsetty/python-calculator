name: Build and Push Docker Image

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Custom tag for the Docker image'
        required: false
        default: 'latest'

env:
  DOCKER_HUB_REPO: ashokvsetty/docker-repo
  IMAGE_NAME: calculator

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: 🛒 Checkout repository
      uses: actions/checkout@v4
      
    - name: 🐳 Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: 🔐 Login to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        
    - name: 📝 Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.DOCKER_HUB_REPO }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=${{ env.IMAGE_NAME }}
          type=raw,value=latest,enable={{is_default_branch}}
          type=raw,value=${{ github.event.inputs.tag }},enable=${{ github.event_name == 'workflow_dispatch' }}
          type=sha,prefix={{branch}}-
          
    - name: 🔨 Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: 🧪 Test Docker image
      if: github.event_name != 'pull_request'
      run: |
        echo "🚀 Testing the built image..."
        docker run --rm -d --name test-calculator -p 8000:8000 ${{ env.DOCKER_HUB_REPO }}:${{ env.IMAGE_NAME }}
        sleep 5
        
        # Test if the application is responding
        if curl -f http://localhost:8000 > /dev/null 2>&1; then
          echo "✅ Application is responding correctly"
        else
          echo "❌ Application test failed"
          docker logs test-calculator
          exit 1
        fi
        
        docker stop test-calculator
        echo "🎉 Docker image test completed successfully"
        
    - name: 📊 Image digest
      if: github.event_name != 'pull_request'
      run: echo "Image digest: ${{ steps.build.outputs.digest }}"
      
    - name: 📝 Create release notes
      if: startsWith(github.ref, 'refs/tags/v')
      run: |
        echo "## 🐳 Docker Images" >> release_notes.md
        echo "" >> release_notes.md
        echo "### Available Tags:" >> release_notes.md
        echo "\`\`\`" >> release_notes.md
        echo "docker pull ${{ env.DOCKER_HUB_REPO }}:${{ env.IMAGE_NAME }}" >> release_notes.md
        echo "docker pull ${{ env.DOCKER_HUB_REPO }}:latest" >> release_notes.md
        echo "docker pull ${{ env.DOCKER_HUB_REPO }}:${GITHUB_REF#refs/tags/}" >> release_notes.md
        echo "\`\`\`" >> release_notes.md
        echo "" >> release_notes.md
        echo "### Quick Run:" >> release_notes.md
        echo "\`\`\`bash" >> release_notes.md
        echo "docker run -p 8000:8000 ${{ env.DOCKER_HUB_REPO }}:${{ env.IMAGE_NAME }}" >> release_notes.md
        echo "\`\`\`" >> release_notes.md
        echo "" >> release_notes.md
        echo "Then open: http://localhost:8000" >> release_notes.md
        
    - name: 📋 Upload release notes
      if: startsWith(github.ref, 'refs/tags/v')
      uses: actions/upload-artifact@v4
      with:
        name: release-notes
        path: release_notes.md

